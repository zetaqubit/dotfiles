# Config that is very close to a i3 window manager's keybinding.

# Set prefix to <C-space>
set -g prefix "C- "
bind-key "C- " send-prefix

# Startup options
set -s escape-time 0
setw -g aggressive-resize on
set -g history-limit 100000

# First remove *all* keybindings
unbind-key -a

# List keys
bind-key ? list-keys

# Session management
bind-key ` detach

# Mouse on/off
#set -g mouse on
# to enable mouse scroll, see https://github.com/tmux/tmux/issues/145#issuecomment-150736967
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
#bind -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
#bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
#setw -g mode-mouse on
#setw -g mouse-resize-pane on
#set -g mouse-select-pane on

## Copy mode flow:
## 1. <leader>y to enter copy mode.
## 2. v to begin selection.
## 3. y to copy selection.
## 4. q to exit copy mode.
## 5. p to paste selection.
#set-option -g default-command "reattach-to-user-namespace -l bash"
#bind -T copy-mode-vi 'y' send-keys -X copy-pipe 'reattach-to-user-namespace pbcopy'

# -- copy mode -----------------------------------------------------------------
# See https://github.com/gpakosz/.tmux

set -g mouse on

# Toggle mouse on/off
bind-key m set -g mouse

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# These commands are replaced by tmux-yank plugin below.
# copy to macOS clipboard
#if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
#if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'

# # copy to X11 clipboard
#if -b 'command -v xclip > /dev/null 2>&1' 'bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -in -selection clipboard"'
#if -b 'command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
#if -b '! command -v xclip > /dev/null 2>&1 && command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'

# don't end copy session on mouse up.
unbind -T copy-mode-vi MouseDragEnd1Pane

# Provide dvorak mappings for movement keys
bind -T copy-mode-vi 'h' send-keys -X cursor-left
bind -T copy-mode-vi 't' send-keys -X cursor-down
bind -T copy-mode-vi 'n' send-keys -X cursor-up
bind -T copy-mode-vi 's' send-keys -X cursor-right
bind -T copy-mode-vi 'H' send-keys -X start-of-line
bind -T copy-mode-vi 'T' send-keys -X halfpage-down
bind -T copy-mode-vi 'N' send-keys -X halfpage-up
bind -T copy-mode-vi 'S' send-keys -X end-of-line
bind -T copy-mode-vi 'v' send-keys -X begin-selection
bind -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind -T copy-mode-vi 'j' send-keys -X search-again
bind -T copy-mode-vi 'k' send-keys -X search-reverse
bind -T copy-mode-vi 'y' send-keys -X copy-selection

# Refresh client
bind-key R refresh-client \; display-message "Refresh already"

# Config Reloads
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded"

# Start with index 1
set -g base-index 1
setw -g pane-base-index 1

# Clock
setw -g clock-mode-style 24

# Split window
bind-key "_" split-window -h
bind-key "-" split-window -v

# Rotate Window
bind-key -n M-o rotate-window

# Switch pane with alt+htns (no prefix)
bind-key -n M-h select-pane -L
bind-key -n M-t select-pane -D
bind-key -n M-n select-pane -U
bind-key -n M-s select-pane -R

# Resize pane (with repeat).
bind-key -r h resize-pane -L 5 \; display-message "Resize left"
bind-key -r t resize-pane -D 5 \; display-message "Resize down"
bind-key -r n resize-pane -U 5 \; display-message "Resize up"
bind-key -r s resize-pane -R 5 \; display-message "Resize right"

# Swap pane (with repeat).
bind-key -r H swap-pane -U
bind-key -r S swap-pane -D

# Cycle between layouts.
bind-key -n M-Space next-layout

# Zoom pane to fullscreen and back.
bind-key -n M-z resize-pane -Z

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

bind-key , command-prompt "rename-window %%"

# Choose window
bind-key w choose-window

# Switch windows alt+number
bind-key -n M-1 if-shell 'tmux select-window -t 1' '' 'new-window -t 1'
bind-key -n M-2 if-shell 'tmux select-window -t 2' '' 'new-window -t 2'
bind-key -n M-3 if-shell 'tmux select-window -t 3' '' 'new-window -t 3'
bind-key -n M-4 if-shell 'tmux select-window -t 4' '' 'new-window -t 4'
bind-key -n M-5 if-shell 'tmux select-window -t 5' '' 'new-window -t 5'
bind-key -n M-6 if-shell 'tmux select-window -t 6' '' 'new-window -t 6'
bind-key -n M-7 if-shell 'tmux select-window -t 7' '' 'new-window -t 7'
bind-key -n M-8 if-shell 'tmux select-window -t 8' '' 'new-window -t 8'
bind-key -n M-9 if-shell 'tmux select-window -t 9' '' 'new-window -t 9'
bind-key -n M-0 if-shell 'tmux select-window -t 10' '' 'new-window -t 10'


# Change current pane to next window
bind-key 1 if-shell 'tmux join-pane -t :1' '' 'new-window -d -t 1; join-pane -t :1 ; kill-pane -a'
bind-key 2 if-shell 'tmux join-pane -t :2' '' 'new-window -d -t 2; join-pane -t :2 ; kill-pane -a'
bind-key 3 if-shell 'tmux join-pane -t :3' '' 'new-window -d -t 3; join-pane -t :3 ; kill-pane -a'
bind-key 4 if-shell 'tmux join-pane -t :4' '' 'new-window -d -t 4; join-pane -t :4 ; kill-pane -a'
bind-key 5 if-shell 'tmux join-pane -t :5' '' 'new-window -d -t 5; join-pane -t :5 ; kill-pane -a'
bind-key 6 if-shell 'tmux join-pane -t :6' '' 'new-window -d -t 6; join-pane -t :6 ; kill-pane -a'
bind-key 7 if-shell 'tmux join-pane -t :7' '' 'new-window -d -t 7; join-pane -t :7 ; kill-pane -a'
bind-key 8 if-shell 'tmux join-pane -t :8' '' 'new-window -d -t 8; join-pane -t :8 ; kill-pane -a'
bind-key 9 if-shell 'tmux join-pane -t :9' '' 'new-window -d -t 9; join-pane -t :9 ; kill-pane -a'
bind-key 0 if-shell 'tmux join-pane -t :10' '' 'new-window -d -t 10; join-pane -t :10 ; kill-pane -a'

# Kill Selected Pane
bind-key d kill-pane

# All sessions: send the same command to all panes/windows.
# bind E command-prompt -p "Command:" \
#        "run \"tmux list-panes -a -F '##{session_name}:##{window_index}.##{pane_index}' \
#               | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# Current session: Send the same command to all panes/windows.
bind e command-prompt -p "Command:" \
         "run \"tmux list-panes -s -F '##{session_name}:##{window_index}.##{pane_index}' \
                | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# ---------------------------- styles -----------------------------------------
# Configure the status bar.
set -g status-interval 1
set -g status-position top
set -g status-justify left
set -g status-left-length 120
set -g status-right '#[fg=green,bold][ %Y-%m-%d %H:%M:%S ]#[default]'
set -g status-bg black
set -g status-fg white
setw -g window-status-current-style fg=colour208

# Put a border around active pane.
set-option -g pane-active-border-style bg=default,fg=colour208


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n M-t if-shell "$is_vim" "send-keys C-t"  "select-pane -D"
bind-key -n M-n if-shell "$is_vim" "send-keys C-n"  "select-pane -U"
bind-key -n M-s if-shell "$is_vim" "send-keys C-s"  "select-pane -R"
bind-key -n 'M-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-t select-pane -D
bind-key -T copy-mode-vi M-n select-pane -U
bind-key -T copy-mode-vi M-s select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l

# ---------------------------- tmux-plugins/tpm --------------------------------
# !!! After adding plugins, install them via <prefix>I.
# https://github.com/tmux-plugins/tpm

# Plugin Manager
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'off'

set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_action 'copy-pipe'

# Smart pane switching with awareness of Vim splits.
#set -g @plugin 'christoomey/vim-tmux-navigator'
# ---------------------------- tmux-plugins/tpm (end) --------------------------

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

unbind-key y
unbind-key Y
bind-key C copy-mode
bind-key C-y copy-mode
bind-key C-p paste-buffer

